# syntax=docker/dockerfile:1.7.0

ARG PYTHON_VERSION=3.11

FROM ghcr.io/astral-sh/uv:python${PYTHON_VERSION}-bookworm-slim as builder

ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy

# Configure the Python directory so it is consistent
ENV UV_PYTHON_INSTALL_DIR /python

# Only use the managed Python version
ENV UV_PYTHON_PREFERENCE=only-managed

# Install Python before the project for caching
RUN uv python install "$PYTHON_VERSION"

WORKDIR /app

COPY pyproject.toml .

# venv
ARG UV_PROJECT_ENVIRONMENT="/opt/venv"
ENV VENV="${UV_PROJECT_ENVIRONMENT}"
ENV PATH="$VENV/bin:$PATH"

RUN uv venv $UV_PROJECT_ENVIRONMENT \
    && uv pip install -r pyproject.toml --all-extras

FROM python:${PYTHON_VERSION}-slim-bookworm as deps

# avoid stuck build due to user prompt
ARG DEBIAN_FRONTEND=noninteractive

# install dependencies
RUN apt-get -qq update \
    && apt-get -qq install \
    --no-install-recommends -y \
    curl \
    sudo \
    tzdata \
    && rm -rf /var/lib/apt/lists/*

FROM deps as runner

# set timezone
ENV TZ=${TZ:-"America/Chicago"}
RUN ln -snf "/usr/share/zoneinfo/${TZ}" /etc/localtime && echo "$TZ" > /etc/timezone

# setup standard non-root user for use downstream
ENV USER_NAME=appuser
ARG VENV="/opt/venv"

ENV PATH="${VENV}/bin:${HOME}/.local/bin:$PATH"

# standardise on locale, don't generate .pyc, enable tracebacks on seg faults
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONFAULTHANDLER 1

# add non-root user with sudo privileges
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/home/${USER_NAME}" \
    --shell "/bin/bash" \
    --uid "${UID}" \
    ${USER_NAME} \
    && echo "${USER_NAME} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/${USER_NAME} \
    && chmod 0440 /etc/sudoers.d/${USER_NAME}

USER ${USER_NAME}
WORKDIR /home/${USER_NAME}

# Copy the Python version
COPY --from=builder --chown=${USER_NAME}:${USER_NAME} /python /python

WORKDIR /app

# Copy venv first (has better caching properties)
COPY --from=builder --chown=${USER_NAME} "$VENV" "$VENV"

# Copy application code last
COPY --chown=${USER_NAME} ./app .

CMD [ "sleep", "infinity" ]

LABEL org.opencontainers.image.title="meetup_bot"
LABEL org.opencontainers.image.version="dev"
LABEL org.opencontainers.image.description="meetup_bot image for development"
